"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/redux/action/index.js":
/*!***********************************!*\
  !*** ./src/redux/action/index.js ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toggleCategory: function() { return /* binding */ toggleCategory; },\n/* harmony export */   toggleHotel: function() { return /* binding */ toggleHotel; },\n/* harmony export */   toggleSupport: function() { return /* binding */ toggleSupport; },\n/* harmony export */   toggleUser: function() { return /* binding */ toggleUser; },\n/* harmony export */   toggleVendor: function() { return /* binding */ toggleVendor; }\n/* harmony export */ });\n// actions.js\nconst toggleVendor = (vendorId, isverify)=>({\n        type: \"TOGGLE_VENDOR\",\n        payload: {\n            vendorId,\n            isverify\n        }\n    });\n// actions.js\nconst toggleCategory = (categoryId, isActive)=>({\n        type: \"TOGGLE_CATEGORY\",\n        payload: {\n            categoryId,\n            isActive\n        }\n    });\nconst toggleUser = (userId, isActive)=>({\n        type: \"TOGGLE_USER\",\n        payload: {\n            userId,\n            isActive\n        }\n    });\nconst toggleHotel = (hotelId, isActive)=>({\n        type: \"TOGGLE_HOTEL\",\n        payload: {\n            hotelId,\n            isActive\n        }\n    });\nconst toggleSupport = (supportId, isActive)=>({\n        type: \"TOGGLE_SUPPORT\",\n        payload: {\n            supportId,\n            isActive\n        }\n    });\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVkdXgvYWN0aW9uL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsYUFBYTtBQUNOLE1BQU1BLGVBQWUsQ0FBQ0MsVUFBVUMsV0FBYztRQUNqREMsTUFBTTtRQUNOQyxTQUFTO1lBQUVIO1lBQVVDO1FBQVM7SUFFaEMsR0FBRztBQUNILGFBQWE7QUFDUixNQUFNRyxpQkFBaUIsQ0FBQ0MsWUFBWUMsV0FBYztRQUNyREosTUFBTTtRQUNOQyxTQUFTO1lBQUVFO1lBQVlDO1FBQVM7SUFDbEMsR0FBRztBQUVJLE1BQU1DLGFBQWEsQ0FBQ0MsUUFBUUYsV0FBYztRQUMvQ0osTUFBTTtRQUNOQyxTQUFTO1lBQUVLO1lBQVFGO1FBQVM7SUFDOUIsR0FBRztBQUVJLE1BQU1HLGNBQWMsQ0FBQ0MsU0FBU0osV0FBYztRQUNqREosTUFBTTtRQUNOQyxTQUFTO1lBQUVPO1lBQVNKO1FBQVM7SUFDL0IsR0FBRztBQUVJLE1BQU1LLGdCQUFnQixDQUFDQyxXQUFXTixXQUFjO1FBQ3JESixNQUFNO1FBQ05DLFNBQVM7WUFBRVM7WUFBV047UUFBUztJQUNqQyxHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9yZWR1eC9hY3Rpb24vaW5kZXguanM/YmQxNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBhY3Rpb25zLmpzXG5leHBvcnQgY29uc3QgdG9nZ2xlVmVuZG9yID0gKHZlbmRvcklkLCBpc3ZlcmlmeSkgPT4gKHtcbiAgICB0eXBlOiAnVE9HR0xFX1ZFTkRPUicsXG4gICAgcGF5bG9hZDogeyB2ZW5kb3JJZCwgaXN2ZXJpZnkgfSxcbiAgICBcbiAgfSk7XG4gIC8vIGFjdGlvbnMuanNcbmV4cG9ydCBjb25zdCB0b2dnbGVDYXRlZ29yeSA9IChjYXRlZ29yeUlkLCBpc0FjdGl2ZSkgPT4gKHtcbiAgICB0eXBlOiAnVE9HR0xFX0NBVEVHT1JZJyxcbiAgICBwYXlsb2FkOiB7IGNhdGVnb3J5SWQsIGlzQWN0aXZlIH0sXG4gIH0pO1xuXG4gIGV4cG9ydCBjb25zdCB0b2dnbGVVc2VyID0gKHVzZXJJZCwgaXNBY3RpdmUpID0+ICh7XG4gICAgdHlwZTogJ1RPR0dMRV9VU0VSJyxcbiAgICBwYXlsb2FkOiB7IHVzZXJJZCwgaXNBY3RpdmUgfSxcbiAgfSk7XG5cbiAgZXhwb3J0IGNvbnN0IHRvZ2dsZUhvdGVsID0gKGhvdGVsSWQsIGlzQWN0aXZlKSA9PiAoe1xuICAgIHR5cGU6ICdUT0dHTEVfSE9URUwnLFxuICAgIHBheWxvYWQ6IHsgaG90ZWxJZCwgaXNBY3RpdmUgfSxcbiAgfSk7XG5cbiAgZXhwb3J0IGNvbnN0IHRvZ2dsZVN1cHBvcnQgPSAoc3VwcG9ydElkLCBpc0FjdGl2ZSkgPT4gKHtcbiAgICB0eXBlOiAnVE9HR0xFX1NVUFBPUlQnLFxuICAgIHBheWxvYWQ6IHsgc3VwcG9ydElkLCBpc0FjdGl2ZSB9LFxuICB9KTsiXSwibmFtZXMiOlsidG9nZ2xlVmVuZG9yIiwidmVuZG9ySWQiLCJpc3ZlcmlmeSIsInR5cGUiLCJwYXlsb2FkIiwidG9nZ2xlQ2F0ZWdvcnkiLCJjYXRlZ29yeUlkIiwiaXNBY3RpdmUiLCJ0b2dnbGVVc2VyIiwidXNlcklkIiwidG9nZ2xlSG90ZWwiLCJob3RlbElkIiwidG9nZ2xlU3VwcG9ydCIsInN1cHBvcnRJZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/redux/action/index.js\n"));

/***/ })

});